# All-in-One Namespace-Restricted Deployment for Podboard
# This file contains all resources needed for a safe, namespace-restricted deployment
#
# Deploy with: kubectl apply -f all-in-one-namespace-restricted.yaml
# Access with: kubectl port-forward svc/podboard 9999:9999

apiVersion: v1
kind: ServiceAccount
metadata:
  name: podboard
  namespace: default
---
# Role for namespace-specific pod operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: podboard-namespace
  namespace: default
rules:
# Core pod monitoring permissions
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# Pod deletion permission (restricted to this namespace)
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["delete"]
---
# ClusterRole for cluster-wide read-only operations
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: podboard-cluster-readonly
rules:
# Namespace discovery for filtering
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
# Read-only pod access across namespaces for monitoring
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
# Bind namespace-specific role to service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: podboard-namespace
  namespace: default
subjects:
- kind: ServiceAccount
  name: podboard
  namespace: default
roleRef:
  kind: Role
  name: podboard-namespace
  apiGroup: rbac.authorization.k8s.io
---
# Bind cluster-wide read-only role to service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: podboard-cluster-readonly
subjects:
- kind: ServiceAccount
  name: podboard
  namespace: default
roleRef:
  kind: ClusterRole
  name: podboard-cluster-readonly
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podboard
  namespace: default
  labels:
    app: podboard
    component: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: podboard
  template:
    metadata:
      labels:
        app: podboard
        component: dashboard
    spec:
      serviceAccountName: podboard
      containers:
      - name: podboard
        image: ghcr.io/nikogura/podboard:latest
        ports:
        - containerPort: 9999
          name: http
          protocol: TCP
        env:
        # Optional: Set default namespace
        - name: NAMESPACE
          value: "default"
        # Optional: Set domain for cookies
        - name: DOMAIN
          value: "podboard.local"
        # Health check endpoint
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Resource limits
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534 # nobody user
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: podboard
  namespace: default
  labels:
    app: podboard
    component: dashboard
spec:
  type: ClusterIP
  ports:
  - port: 9999
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: podboard