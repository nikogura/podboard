name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.24'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.semver.outputs.version_tag }}
      version: ${{ steps.semver.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Version
      run: |
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.3.5")
        echo "Last tag: $LAST_TAG"

        # Extract version numbers
        VERSION=${LAST_TAG#v}
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

        # Increment patch version
        PATCH=$((PATCH + 1))
        NEW_VERSION="v${MAJOR}.${MINOR}.${PATCH}"

        echo "New version: $NEW_VERSION"
        echo "version_tag=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "version=${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_OUTPUT
      id: semver

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Download dependencies
      run: go mod download

    - name: Run unit tests first
      run: make test

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        verify: false

    - name: Lint Checks
      run: make lint

    # Integration tests using the actual test_integration_test.go file
    # These tests require environment variables to be set to run, otherwise they skip
    - name: Run integration tests (will skip without environment)
      run: |
        echo "Integration tests require environment variables to be set to run, otherwise they skip"
        echo "Running integration test setup check..."
        make test-integration
      timeout-minutes: 2

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0


    - name: Tag Repo
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ needs.test.outputs.version_tag }}

    - name: Publish Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.test.outputs.version_tag }}
        name: ${{ needs.test.outputs.version_tag }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
